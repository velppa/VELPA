#+title: velpa â€“ Velppa's Emacs Lisp Package Archive
#+date: <2024-06-15 Sat>

This repository holds Emacs Lisp packages I stored in my Dotfiles.
Some of the packages are clones from Emacs Wiki, some have added
tweaks that I haven't yet submitted upstream or too lazy to advise.
Some packages are mine but they are small and don't deserve a separate
repository.

Inspired by [[https://github.com/alphapapa/unpackaged.el/tree/master][alphapapa/unpackaged.el: A collection of useful Emacs Lisp
code that isn't substantial enough to be packaged]].

* Usage
1. Clone the repository
   #+begin_src sh
cd ~/Developer/src/github.com/velppa
git clone https://github.com/velppa/velpa.git
   #+end_src

2. Add it to =load-path=:
   #+begin_src emacs-lisp
(add-to-list 'load-path "~/Developer/src/github.com/velppa/velpa")
   #+end_src

3. Require or use-package.  With =quartz.el= example:
   #+begin_src emacs-lisp
(require 'quartz)
   #+end_src


* Testing

1. *From Emacs interactively:*
   #+begin_src emacs-lisp
   ;; Load the test file
   M-x load-file RET spark-sender-test.el RET

   ;; Run the specific test
   M-x ert RET spark-sender-test--wrap-val-in-curly-braces RET

   ;; Or run all tests with prefix "spark-sender-test"
   M-x ert RET spark-sender-test RET
   #+end_src

2. *From command line:*
   #+begin_src bash
   emacs -batch -l spark-sender.el -l spark-sender-test.el -f ert-run-tests-batch-and-exit
   #+end_src

3. *From within Emacs Lisp:*
   #+begin_src emacs-lisp
   (load-file "spark-sender-test.el")
   (ert-run-tests-interactively "spark-sender-test")
   #+end_src

* Licence
MIT
